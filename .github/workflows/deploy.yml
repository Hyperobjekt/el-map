name: Triggered Deploy to AWS

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true # true OR recursive
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod

      - name: Set bucket for branch
        id: deploy-bucket
        run: |
          if [[ $GITHUB_REF == 'refs/heads/production' ]]; then
              echo "::set-output name=MAP_BUCKET::eviction-lab-map-v2"
              echo "::set-output name=CLOUDFRONT_ID::${{ secrets.CLOUDFRONT_ID }}"
          fi
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: NPM install
        run: npm ci

      - name: Build
        run: |
          if [[ $GITHUB_REF == 'refs/heads/production' ]]; then
            yarn build
          fi
      - name: Before deploy
        run: |
          pip install --user awscli
          export PATH=$PATH:$HOME/.local/bin
      - name: Deploy
        run: |
          aws s3 cp dist/ s3://${{ steps.deploy-bucket.outputs.MAP_BUCKET }}/v2map --recursive --cache-control max-age=3600
          
          aws cloudfront create-invalidation --distribution-id=${{ steps.deploy-bucket.outputs.CLOUDFRONT_ID }} --paths="/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
